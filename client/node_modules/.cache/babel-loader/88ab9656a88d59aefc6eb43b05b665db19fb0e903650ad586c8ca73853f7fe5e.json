{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = [ss];\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required..\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...\");\n  } else if (values.password.length < 6) {\n    errors.password = toast.error(\"Password must be more then 6 letters....\");\n  } else if (specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have Special Characters\");\n  }\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required..');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","specialChars","ss","password","error","includes","length","test","passwordValidate","username"],"sources":["D:/Web app/mern-login/client/src/helper/validate.js"],"sourcesContent":["import {toast} from \"react-hot-toast\";\r\n\r\nexport async function usernameValidate(values){\r\n    const errors=usernameVerify({},values);\r\n\r\n    return errors;\r\n\r\n}\r\n\r\nfunction passwordVerify(errors={},values){\r\n\r\n    const specialChars= [ss];\r\n\r\n    if(!values.password){\r\n        errors.password=toast.error(\"Password Required..\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password=toast.error(\"Wrong Password...\");\r\n    } else if(values.password.length<6){\r\n        errors.password=toast.error(\"Password must be more then 6 letters....\");\r\n    } else if(specialChars.test(values.password)){\r\n            errors.password=toast.error(\"Password must have Special Characters\");\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors=passwordVerify({},values);\r\n\r\n    return errors;\r\n}\r\n\r\nfunction usernameVerify(error ={},values){\r\n    if(!values.username){\r\n        error.username=toast.error('Username Required..');\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username= toast.error('Invalid Username...')\r\n    }\r\n    return error;\r\n}"],"mappings":"AAAA,SAAQA,KAAK,QAAO,iBAAiB;AAErC,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EAEtC,OAAOC,MAAM;AAEjB;AAEA,SAASE,cAAc,GAAkB;EAAA,IAAjBF,MAAM,uEAAC,CAAC,CAAC;EAAA,IAACD,MAAM;EAEpC,MAAMI,YAAY,GAAE,CAACC,EAAE,CAAC;EAExB,IAAG,CAACL,MAAM,CAACM,QAAQ,EAAC;IAChBL,MAAM,CAACK,QAAQ,GAACR,KAAK,CAACS,KAAK,CAAC,qBAAqB,CAAC;EACtD,CAAC,MAAM,IAAGP,MAAM,CAACM,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCP,MAAM,CAACK,QAAQ,GAACR,KAAK,CAACS,KAAK,CAAC,mBAAmB,CAAC;EACpD,CAAC,MAAM,IAAGP,MAAM,CAACM,QAAQ,CAACG,MAAM,GAAC,CAAC,EAAC;IAC/BR,MAAM,CAACK,QAAQ,GAACR,KAAK,CAACS,KAAK,CAAC,0CAA0C,CAAC;EAC3E,CAAC,MAAM,IAAGH,YAAY,CAACM,IAAI,CAACV,MAAM,CAACM,QAAQ,CAAC,EAAC;IACrCL,MAAM,CAACK,QAAQ,GAACR,KAAK,CAACS,KAAK,CAAC,uCAAuC,CAAC;EAC5E;EACA,OAAON,MAAM;AACjB;AAEA,OAAO,eAAeU,gBAAgB,CAACX,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACE,cAAc,CAAC,CAAC,CAAC,EAACH,MAAM,CAAC;EAEtC,OAAOC,MAAM;AACjB;AAEA,SAASC,cAAc,GAAkB;EAAA,IAAjBK,KAAK,uEAAE,CAAC,CAAC;EAAA,IAACP,MAAM;EACpC,IAAG,CAACA,MAAM,CAACY,QAAQ,EAAC;IAChBL,KAAK,CAACK,QAAQ,GAACd,KAAK,CAACS,KAAK,CAAC,qBAAqB,CAAC;EACrD,CAAC,MACI,IAAGP,MAAM,CAACY,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAC;IAClCD,KAAK,CAACK,QAAQ,GAAEd,KAAK,CAACS,KAAK,CAAC,qBAAqB,CAAC;EACtD;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}