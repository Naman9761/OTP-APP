{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  //const specialChars=~`!@#$%^&*()-_+={}[]|/\\:;\"<>,.?`;\n\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required..\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...\");\n  } else if (values.password.length < 6) {\n    errors.password = toast.error(\"Password must be more then 6 letters....\");\n  }\n  // else if(specialChars.test(values.password)){\n  //         errors.password=toast.error(\"Password must have Special Characters\");\n  // }\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match\");\n  }\n  return errors;\n}\nexport async function registerValidate(values) {\n  const errors = emailVerify({}, values);\n  // passwordVerify(errors,values);\n  usernameVerify(errors, values);\n  return errors;\n}\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required..');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...');\n  }\n  return error;\n}\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) error.email = toast.error(\"Email Required\");else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","password","error","includes","length","passwordValidate","resetPasswordValidation","confirm_pwd","exist","registerValidate","emailVerify","username","email"],"sources":["D:/Web app/mern-login/client/src/helper/validate.js"],"sourcesContent":["import {toast} from \"react-hot-toast\";\r\n\r\nexport async function usernameValidate(values){\r\n    const errors=usernameVerify({},values);\r\n\r\n    return errors;\r\n\r\n}\r\n\r\nfunction passwordVerify(errors={},values){\r\n\r\n    //const specialChars=~`!@#$%^&*()-_+={}[]|/\\:;\"<>,.?`;\r\n\r\n\r\n    if(!values.password){\r\n        errors.password=toast.error(\"Password Required..\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password=toast.error(\"Wrong Password...\");\r\n    } else if(values.password.length<6){\r\n        errors.password=toast.error(\"Password must be more then 6 letters....\");\r\n    } \r\n    // else if(specialChars.test(values.password)){\r\n    //         errors.password=toast.error(\"Password must have Special Characters\");\r\n    // }\r\n    return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors=passwordVerify({},values);\r\n    return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({},values);\r\n\r\n    if(values.password!==values.confirm_pwd){\r\n        errors .exist=toast.error(\"Password not match\");\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport async function registerValidate(values){\r\n    const errors=emailVerify({},values);\r\n    // passwordVerify(errors,values);\r\n     usernameVerify(errors,values);\r\n\r\n    return errors;\r\n}\r\n\r\nfunction usernameVerify(error ={},values){\r\n    if(!values.username){\r\n        error.username=toast.error('Username Required..');\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username= toast.error('Invalid Username...')\r\n    }\r\n    return error;\r\n}\r\n\r\nfunction emailVerify(error={},values){\r\n    if(!values.email)\r\n        error.email=toast.error(\"Email Required\");\r\n    else if(values.email.includes(\" \")){\r\n            error.email=toast.error(\"Wrong Email\")\r\n    }\r\n    return error;\r\n}"],"mappings":"AAAA,SAAQA,KAAK,QAAO,iBAAiB;AAErC,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EAEtC,OAAOC,MAAM;AAEjB;AAEA,SAASE,cAAc,GAAkB;EAAA,IAAjBF,MAAM,uEAAC,CAAC,CAAC;EAAA,IAACD,MAAM;EAEpC;;EAGA,IAAG,CAACA,MAAM,CAACI,QAAQ,EAAC;IAChBH,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,qBAAqB,CAAC;EACtD,CAAC,MAAM,IAAGL,MAAM,CAACI,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCL,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,mBAAmB,CAAC;EACpD,CAAC,MAAM,IAAGL,MAAM,CAACI,QAAQ,CAACG,MAAM,GAAC,CAAC,EAAC;IAC/BN,MAAM,CAACG,QAAQ,GAACN,KAAK,CAACO,KAAK,CAAC,0CAA0C,CAAC;EAC3E;EACA;EACA;EACA;EACA,OAAOJ,MAAM;AACjB;AAEA,OAAO,eAAeO,gBAAgB,CAACR,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACE,cAAc,CAAC,CAAC,CAAC,EAACH,MAAM,CAAC;EACtC,OAAOC,MAAM;AACjB;AAEA,OAAO,eAAeQ,uBAAuB,CAACT,MAAM,EAAC;EACjD,MAAMC,MAAM,GAAGE,cAAc,CAAC,CAAC,CAAC,EAACH,MAAM,CAAC;EAExC,IAAGA,MAAM,CAACI,QAAQ,KAAGJ,MAAM,CAACU,WAAW,EAAC;IACpCT,MAAM,CAAEU,KAAK,GAACb,KAAK,CAACO,KAAK,CAAC,oBAAoB,CAAC;EACnD;EACA,OAAOJ,MAAM;AACjB;AAEA,OAAO,eAAeW,gBAAgB,CAACZ,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACY,WAAW,CAAC,CAAC,CAAC,EAACb,MAAM,CAAC;EACnC;EACCE,cAAc,CAACD,MAAM,EAACD,MAAM,CAAC;EAE9B,OAAOC,MAAM;AACjB;AAEA,SAASC,cAAc,GAAkB;EAAA,IAAjBG,KAAK,uEAAE,CAAC,CAAC;EAAA,IAACL,MAAM;EACpC,IAAG,CAACA,MAAM,CAACc,QAAQ,EAAC;IAChBT,KAAK,CAACS,QAAQ,GAAChB,KAAK,CAACO,KAAK,CAAC,qBAAqB,CAAC;EACrD,CAAC,MACI,IAAGL,MAAM,CAACc,QAAQ,CAACR,QAAQ,CAAC,GAAG,CAAC,EAAC;IAClCD,KAAK,CAACS,QAAQ,GAAEhB,KAAK,CAACO,KAAK,CAAC,qBAAqB,CAAC;EACtD;EACA,OAAOA,KAAK;AAChB;AAEA,SAASQ,WAAW,GAAiB;EAAA,IAAhBR,KAAK,uEAAC,CAAC,CAAC;EAAA,IAACL,MAAM;EAChC,IAAG,CAACA,MAAM,CAACe,KAAK,EACZV,KAAK,CAACU,KAAK,GAACjB,KAAK,CAACO,KAAK,CAAC,gBAAgB,CAAC,CAAC,KACzC,IAAGL,MAAM,CAACe,KAAK,CAACT,QAAQ,CAAC,GAAG,CAAC,EAAC;IAC3BD,KAAK,CAACU,KAAK,GAACjB,KAAK,CAACO,KAAK,CAAC,aAAa,CAAC;EAC9C;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}